created: 20231224190533217

''Sourcemapping expanded''

* Support for sourcemapping with generated Tiddlywikis, not just Node.JS anymore. It works by creating a directory of source maps and files to sit alongside your tiddlywiki fles. This works both with standalone tiddlywikis and ones that utilize external javascript to allow caching of the core code.
** The command to generate these sourcemaps is `--savesourcemaps`.
** This directory of sourcemaps can be configured with the new `sourceDirectory=` settings using `--uglify`.
* Also, obviously, support for `offline-external-js` and `all-external-js`. In other words, tiddlywikis that utilize external javascript.
* Sourcemapping for tiddlywiki files is disabled by default, since I imagine most people still won't be using this feature. If you're running a Node.JS server, sourcemapping will still be enabled by default.
* If sourcemapping is disabled, boot modules will at least get a `sourceURL` directive so they'll still show up in your debugger, even if they'll be ugly and incomprehensible.
* Switched to using a boot library module (like `sjcl.js`) for sourcemapping instead of a startup module inside of the Uglify plugin. This has three benefits:
** The library module loads before everything, even `boot.js`, which means ''all'' modules will be properly source mapped instead of just the ones that are loaded after the startup modules are loaded.
** You can now fully remove //Uglify// from your generated files and sourcemapping will still work. The boot library module is a non-shadow library which lurks in the `$:/temp` directory, unseen and unheard.
** When using external-js, the boot library module exists in the `tiddlywikicore.js` file, and not in your tiddlywiki, which means all sourcemapping exists neatly wrapped up and separate, just like the core code. It's very clean.

''What else?''

* JSON files in plugins will now be uglified too. This probably won't come up often, but it allowed for a cleaner implementation of the plugin uglifier.
* Shadow tiddlers inside of plugins that don't start with `$:/` are no longer uglified. This is because the only instance of such tiddlers that I found (like `GettingStarted`) exist to be viewed and edited by end-users, so they really shouldn't be uglified anyway.
* Changed the way `--uglify` takes arguments. It now uses `<key>=<value>` pairs to be more like the `--listen` command and others. So instead of `--uglify cache no`, it's `--uglify cache=no`. The old way is still supported for legacy.
