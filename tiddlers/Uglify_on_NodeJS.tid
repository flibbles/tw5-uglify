tags: Usage
title: Uglify on Node.JS
caption: Installing onto Node.JS

You can install //Uglify// on your Node.JS server, and it will serve plugins with compressed javascript to browsers, thus reducing network overhead and increasing browser performance.

!! To install

(These instructions are an abridged version of the [[official TiddlyWiki install instructions|https://tiddlywiki.com/#Installing%20custom%20plugins%20on%20Node.js]]. Look there for more details and alternate options.)

<ol>

<li>Checkout the [[source code on github|https://github.com/flibbles/tw5-uglify]].</li>
<li>

Copy the contents of the `plugins` directory into a `flibbles` directory in a location where you'd like it to be available. Then add that path to the TIDDLYWIKI_PLUGIN_PATH environment variable.

For instance, copy the contents of the plugin directory to "~/.tiddlywiki/flibbles" directory. Then run `echo "export TIDDLYWIKI_PLUGIN_PATH=~/.tiddlywiki" >> ~/.profile`

In this case, if you've installed it correctly, the path to the `plugin.info` file should look like:

```
~/.tiddlywiki/flibbles/uglify/plugin.info
```
</li><li>

Add the plugin to your Node.JS project's `tiddlywiki.info` file. The plugin section will look something like this:

```
{
	...
	"plugins": [
		...
		"flibbles/uglify"
	],
	...
}
```
</li><li>

And that's it. After you restart your server, it will compress all your plugins and [[most of their internal tiddlers|What does Uglify Compress]]. (This will take a while the first time, [[but it will be faster in subsequent reboots|Caching]]). And it will automatically send out compressed and optimized plugins to client browsers.
</li></ol>

!! How it works

TiddlyWiki Node servers will have access to all of your plugins in their good ol' uncompressed format. When it starts, it will create compressed versions of those plugins which it will send to browsers to use. //Internally//, however, Node.js will still be using the uncompressed versions.

Technically that means Node is doing more work and consuming more memory, but that's okay. Node servers aren't what //Uglify// are trying to optimize. Servers tend to be big strong computers with lots of memory. It's your network traffic and browser clients which we're aiming to improve. Now your users can access your server on your old Android phone, which //will// benefit from netork and performance improvements.

Also, since all the compression is done on the server, there's no need for the clients to do it, which is why by default, the server will send an <$link to="Pruning">abridged version of //Uglify//</$link> to the clients instead.

!! Disabling Compression temporarily

{{Toggling Compression}}
